// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  categoryname String?
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @updatedAt
  deleted_at   DateTime?  @map("deleted_at")
  //product ดึงไป
  Products     Products[]
}

model Productbrand {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  Namebrand  String?
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime?  @updatedAt
  deleted_at DateTime?  @map("deleted_at")
  //การดึงไปใช้
  products   Products[]
}

model Products {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  productname    String?
  productbrand   String?
  productdetail  String?
  producttype    String?
  productprice   String?
  productimg     String?
  // Subcategory      Subcategory?  @relation(fields: [subcategoryId], references: [id])
  // subcategoryId    String?       @db.ObjectId
  createdAt      DateTime?     @default(now())
  updatedAt      DateTime?     @updatedAt
  deleted_at     DateTime?     @map("deleted_at")
  //ดึงมาใช้
  categoryId     String?       @db.ObjectId
  category       Category?     @relation(fields: [categoryId], references: [id])
  Productbrand   Productbrand? @relation(fields: [productbrandId], references: [id])
  productbrandId String?       @db.ObjectId
  OrderId        String?       @db.ObjectId
  Order          Order?        @relation(fields: [OrderId], references: [id])
}

model News {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  date     String?
  author   String? //ผู้เขียน
  refer    String? //อ้างอิง
  img      String?
}

model Blog {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  img      String?
  img1     String?
  date     String?
  author   String?
}

model Reservation {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  request    String?
  message    String?
  time       String?
  status     String?   @default("ยังไม่ซ่อม") // กำหนดค่าเริ่มต้นเป็น "true"
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
  //ดึงมา
  userId     String?
  user       User?     @relation(fields: [userId], references: [id])
}

model User {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  fname           String?
  lname           String?
  birthday        String?
  email           String?
  password        String?
  confirmPassword String?
  tel             String?
  facebook        String?
  google          String?

  //ดึงมา  
  AddressId   String?       @db.ObjectId
  Address     Address[]
  Reservation Reservation[]
  Order       Order[]
}

model Admin {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String?
  password String?
}

model Address {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  phonenumber String?
  typeaddress String?
  addressline String?
  zipcode     String?
  province    String?
  district    String?
  subdistrict String?
  note        String?
  // User     User[]
  userId      String?
  User        User[]  @relation(fields: [userId], references: [id])
}

model Order {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  status String?
  date   String?
  status String? @default("ยังไม่ชำระ")
  //ดึงมา
  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model OrderList {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId   String?
  user     User?   @relation(fields: [userId], references: [id])
  date     String?
  discount Int? //ส่วนลด
  //ดึงมา
  OrderId  String? @relation(fields: [OrderId], references: [id])
  Order    Order

  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}
