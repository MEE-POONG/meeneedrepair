// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  categoryname   String?
  createdAt      DateTime?     @default(now())
  updatedAt      DateTime?     @updatedAt
  deleted_at     DateTime?     @map("deleted_at")
  Subcategory    Subcategory[]
  Productbrand   Productbrand? @relation(fields: [productbrandId], references: [id])
  productbrandId String?       @db.ObjectId
}

model Subcategory {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  subcategoryname String?
  CategoryId      String?       @db.ObjectId
  ProductbrandId  String?       @db.ObjectId
  createdAt       DateTime?     @default(now())
  updatedAt       DateTime?     @updatedAt
  deleted_at      DateTime?     @map("deleted_at")
  products        Products[]
  category        Category?     @relation(fields: [CategoryId], references: [id])
  productbrand    Productbrand? @relation(fields: [ProductbrandId], references: [id])
}

model Productbrand {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  Namebrand   String?
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime?     @updatedAt
  deleted_at  DateTime?     @map("deleted_at")
  products    Products[]
  Category    Category[]
  Subcategory Subcategory[]
}

model Products {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  productname      String?
  productbrand     String?
  productmodel     String?
  productdetail    String?
  producttype      String?
  productcost      String?
  productprice     String?
  productremaining String?
  productimg       String?
  productimg1      String?
  productimg2      String?
  productimg3      String?
  productimg4      String?
  // categoryId String? @db.ObjectId
  // category Category? @relation(fields: [categoryId], references: [id])
  Subcategory      Subcategory?  @relation(fields: [subcategoryId], references: [id])
  subcategoryId    String?       @db.ObjectId
  createdAt        DateTime?     @default(now())
  updatedAt        DateTime?     @updatedAt
  deleted_at       DateTime?     @map("deleted_at")
  Productbrand     Productbrand? @relation(fields: [productbrandId], references: [id])
  productbrandId   String?       @db.ObjectId
}

model News {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  date     String?
  author   String? //ผู้เขียน
  refer    String? //อ้างอิง
  img      String?
}

model Promote {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  img  String?
  img1 String?
}

model Blog {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  img      String?
  img1     String?
  date     String?
  author   String?
}

model Appointment {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fname      String?
  lname      String?
  email      String?
  tel        String?
  request    String?
  message    String?
  date       String?
  time       String?
  status     String?   @default("ยังไม่ซ่อม") // กำหนดค่าเริ่มต้นเป็น "true"
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  fname           String?
  lname           String?
  birthday        String?
  email           String?
  password        String?
  confirmPassword String?
  tel             String?
  facebook        String?
  google          String?
<<<<<<< HEAD
  secretKey       String?
  AddressId       String? @db.ObjectId
  Address     Address? @relation(fields: [AddressId], references: [id])
  FavoriteItems String[]

=======
  AddressId       String?   @db.ObjectId
  // AddressId       String? 
  // Address         Address? @relation(fields: [AddressId], references: [id])
  Address         Address[]
  FavoriteItems   String[]
  ProductsItems   String[]
>>>>>>> 13009dd020cbb113783ee8a08f0c31c49b1a757e
}

model Admin {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String?
  password String?
}

model Messenger {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  img      String?
  emoji    String?
  chat     String?
  date     String?
}

model Address {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String?
  lname String?
  phonenumber String?
  typeaddress String?
  addressline    String?
  zipcode     String?
  province    String?
  district    String?
  subdistrict String?
  note      String?
  // User        User[]
  userId      String?
  User User? @relation(fields: [userId], references: [id])
}

model Tex {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  // fname String?
  // lname String?
  // tel  String?
  typeaddress String?
  location    String?
  zipcode     String?
  province    String?
  district    String?
  Subdistrict String?
  detail      String?
}

model Taxinvoice {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
