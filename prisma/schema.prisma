// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  fname           String?
  lname           String?
  brithday        String?
  email           String?
  password        String?
  comfirmPassword String?
  tel             String?
  facebook        String?
  google          String?
  Address         Address[]
  Reservation     Reservation[]
  Order           Order[]
}

model Address {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  typeaddress String?
  addressline String?
  zipcode     String?
  province    String?
  distict     String?
  subdistict  String?
  Reservation Reservation[]
  User        User?         @relation(fields: [userId], references: [id])
  userId      String?       @db.ObjectId
}

model Reservation {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  time        String?
  request     String?
  message     String?
  fname       String?
  lname       String?
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?    @db.ObjectId
  Address     Address?   @relation(fields: [addressId], references: [id])
  addressId   String?    @db.ObjectId
  Repairman   Repairman? @relation(fields: [repairmanId], references: [id])
  repairmanId String?    @db.ObjectId
}

model Repairman {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  fname       String?
  lname       String?
  brithday    String?
  email       String?
  tel         String?
  Reservation Reservation[]
}

model Order {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  date      String?
  status    String?
  OrderList OrderList[]
  User      User?       @relation(fields: [userId], references: [id])
  userId    String?     @db.ObjectId
  Payment   Payment?    @relation(fields: [paymentId], references: [id])
  paymentId String?     @db.ObjectId
}

model OrderList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      String?
  discount  String?
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model Product {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String?
  price  String?
  amount String?
  img    String?
  detail String?

  OrderList      OrderList[]
  Category       Category?     @relation(fields: [categoryId], references: [id])
  categoryId     String?       @db.ObjectId
  Productbrand   Productbrand? @relation(fields: [productbrandId], references: [id])
  productbrandId String?       @db.ObjectId
}

model Productbrand {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String?
  Product Product[]
}

model Payment {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  img         String?
  paymentType String?
  Order       Order[]
}

model Category {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String?
  Product Product[]
}

model News {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  date     String?
  author   String? //ผู้เขียน
  refer    String? //อ้างอิง
  img      String?
}

model Blog {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String?
  subtitle String?
  detail   String?
  img      String?
  img1     String?
  date     String?
  author   String?
}
